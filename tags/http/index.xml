<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Http on Yu's Space</title><link>https://code-agree.github.io/tags/http/</link><description>Recent content in Http on Yu's Space</description><generator>Hugo -- gohugo.io</generator><language>en</language><lastBuildDate>Fri, 07 Mar 2025 19:24:12 +0800</lastBuildDate><atom:link href="https://code-agree.github.io/tags/http/index.xml" rel="self" type="application/rss+xml"/><item><title>TLS会话恢复（Session Resumption）</title><link>https://code-agree.github.io/blog/2025-06-24-session_resumption_techniques/</link><pubDate>Fri, 07 Mar 2025 19:24:12 +0800</pubDate><guid>https://code-agree.github.io/blog/2025-06-24-session_resumption_techniques/</guid><description>1. 会话恢复简介 #什么是会话恢复？ #TLS会话恢复是TLS协议的一项优化特性，允许客户端和服务器基于之前建立的安全会话快速恢复通信，跳过完整的握手过程。在TLS 1.3中，会话恢复主要通过**PSK（Pre-Shared Key，预共享密钥）**机制实现，而在TLS 1.2及更早版本中，也可以通过Session ID或Session Ticket实现。
为什么需要会话恢复？ # 性能优化： 完整握手（TLS 1.3）：1-RTT 会话恢复：1-RTT（或0-RTT） 显著减少连接建立时间 资源节省： 降低CPU开销（避免重复密钥交换） 减少网络带宽占用 2. TLS 1.3中的会话恢复机制 #工作流程对比 #完整握手（TLS 1.3） #Client Server | ClientHello | |--------------------&amp;gt;| | ServerHello | | EncryptedExt | | Certificate | | CertVerify | | Finished | |&amp;lt;--------------------| | Finished | |--------------------&amp;gt;| | NewSessionTicket | |&amp;lt;--------------------| RTT：1次往返 服务器在握手后发送NewSessionTicket，包含PSK和有效期信息。 会话恢复（1-RTT） #Client Server | ClientHello | | (with PSK) | |--------------------&amp;gt;| | ServerHello | | Finished | |&amp;lt;--------------------| | Finished | |--------------------&amp;gt;| RTT：1次往返 客户端使用之前保存的PSK直接恢复会话。 0-RTT（可选） #Client Server | ClientHello | | (with PSK + Early Data) | |--------------------&amp;gt;| | ServerHello | | Finished | |&amp;lt;--------------------| | Finished | |--------------------&amp;gt;| RTT：0次往返（早期数据随首次请求发送） 注意：0-RTT有重放攻击风险，仅适用于幂等请求。 3.</description></item></channel></rss>